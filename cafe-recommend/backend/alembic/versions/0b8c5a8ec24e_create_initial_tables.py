"""create_initial_tables

Revision ID: 0b8c5a8ec24e
Revises: 
Create Date: 2025-05-23 02:27:20.032013

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# Import Base from your application's model base
from app.db.base import Base

# revision identifiers, used by Alembic.
revision: str = '0b8c5a8ec24e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.execute("PRAGMA foreign_keys=OFF;") # SQLite specific: disable FKs during operations
    # conn = op.get_bind() # Get the connection
    
    # Reflect all tables from Base.metadata
    # Base.metadata.reflect(bind=conn)
    
    # Drop all tables if they exist (optional, for a clean slate, be careful in production)
    # For a truly clean slate, one might drop tables in a specific order or handle dependencies
    # Base.metadata.drop_all(bind=conn, checkfirst=True)

    # Create all tables defined in Base.metadata
    Base.metadata.create_all(bind=op.get_bind())
    # op.execute("PRAGMA foreign_keys=ON;") # SQLite specific: re-enable FKs
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.execute("PRAGMA foreign_keys=OFF;")
    # For a full drop, similar caution and reflection might be needed
    Base.metadata.drop_all(bind=op.get_bind())
    # op.execute("PRAGMA foreign_keys=ON;")
    # ### end Alembic commands ###
